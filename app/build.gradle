apply plugin: 'android'

configurations {
    ajc
    aspects
    ajInpath
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:19.0.1'
    compile 'com.google.guava:guava:15.0'
    compile files('libs/android-async-http-1.4.4.jar')
    compile files('libs/joda-time-2.3.jar')
    compile files('libs/coollection-0.2.0.jar')
    ajc "org.aspectj:aspectjtools:1.8.0"
    compile 'org.aspectj:aspectjrt:1.8.0'
    compile 'org.robobinding:robobinding:0.8.2'
    aspects 'org.robobinding:robobinding:0.8.2'
    compile files('libs/gson-jodatime-serialisers-1.1.0.jar')
    compile files('libs/gson-2.2.4.jar')
}

android.applicationVariants.all { variant ->

    variant.javaCompile.doLast {
        // Find the android.jar and add to iajc classpath
        def androidSdk = android.adbExe.parent + "/../platforms/" + android.compileSdkVersion + "/android.jar"
        println 'Android SDK android.jar path: ' + androidSdk

        def iajcClasspath = androidSdk + ":" + configurations.compile.asPath
        configurations.compile.dependencies.each { dep ->
            if(dep.hasProperty("dependencyProject")) {
                iajcClasspath += ":" + dep.dependencyProject.buildDir + "/bundles/release/classes.jar"
            }
        }

        // handle aar dependencies pulled in by gradle (Android support library and etc)
        tree = fileTree(dir: "${project.buildDir}/exploded-aar", include: '**/classes.jar')
        tree.each { jarFile ->
            iajcClasspath += ":" + jarFile
        }

        println 'Classpath for iajc: ' + iajcClasspath

        ant.taskdef( resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath)
        ant.iajc (
                source:sourceCompatibility,
                target:targetCompatibility,
                destDir:"${project.buildDir}/classes/${variant.dirName}",
                aspectPath:configurations.aspects.asPath,
                inpath:configurations.ajInpath.asPath,
                sourceRootCopyFilter:"**/.svn/*,**/*.java",
                classpath:iajcClasspath,
                encoding: 'UTF-8'
        ){
            sourceroots{
                android.sourceSets.main.java.srcDirs.each{
                    pathelement(location:it.absolutePath)
                }
                // Build config file
                pathelement(location:"${project.buildDir}/source/buildConfig/${variant.dirName}")

                // Android resources R.***
                pathelement(location:"${project.buildDir}/source/r/${variant.dirName}")
            }
        }
    }
}